name: CI Workflow MLProject

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    name: 🚀 Build and Deploy ML Model
    runs-on: ubuntu-latest
    timeout-minutes: 20

    env:
      MLFLOW_TRACKING_URI: https://dagshub.com/${{ secrets.DAGSHUB_USERNAME }}/smsml_tema.mlflow
      MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v3

      - name: 🐍 Setup Conda with environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: MLProject/conda.yaml
          activate-environment: mlflow-env
          auto-activate-base: false

      - name: 🔍 Check MLflow version
        shell: bash -l {0}
        run: |
          which mlflow
          mlflow --version

      - name: 🏃 Run MLflow project
        id: run_mlflow
        shell: bash -l {0}
        run: |
          cd MLProject
          mlflow run . -P epochs=5 -P model_name=example_model --experiment-id 0

      - name: 🆔 Get latest MLflow run_id
        shell: bash -l {0}
        id: get_run_id
        run: |
          RUN_ID=$(mlflow runs list --experiment-id 0 --max-results 1 | awk 'NR==2 {print $1}')
          if [[ -z "$RUN_ID" ]]; then
            echo "❌ Run ID not found!"
            exit 1
          fi
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "✅ Run ID: $RUN_ID"

      - name: 📥 Download model artifact from MLflow run
        shell: bash -l {0}
        run: |
          MAX_RETRIES=5
          for i in $(seq 1 $MAX_RETRIES); do
            echo "🔁 Attempt $i to download artifacts for run $RUN_ID..."
            mlflow artifacts download --run-id $RUN_ID --artifact-path model -d ./downloaded_model && break
            echo "⚠️ Download failed, retrying in 10s..."
            sleep 10
          done

          if [ ! -d "./downloaded_model" ]; then
            echo "❌ Artifact download failed after $MAX_RETRIES attempts."
            exit 1
          fi

      - name: ☁️ Upload model to Google Drive via rclone
        shell: bash -l {0}
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
        run: |
          zip -r model_${RUN_ID}.zip downloaded_model
          echo "$RCLONE_CONF" > rclone.conf
          rclone --config=rclone.conf copy model_${RUN_ID}.zip gdrive:/mlflow-models/

      - name: 🐳 Build Docker Image
        shell: bash -l {0}
        run: |
          mlflow models build-docker -m ./downloaded_model -n smsmlmodel

      - name: 🔐 Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: 🏷️ Tag Docker Image
        run: docker tag smsmlmodel ${{ secrets.DOCKERHUB_USERNAME }}/smsmlmodel:latest

      - name: 🚢 Push Docker Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/smsmlmodel:latest

      - name: 🔓 Logout Docker Hub
        run: docker logout
