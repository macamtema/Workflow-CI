name: Workflow CI/CD Model ML (Train, Build, and Save Artifact)
on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    name: üöÄ Build, Test, and Deploy ML Model
    runs-on: ubuntu-latest
    timeout-minutes: 360

    permissions:
      contents: write
      pull-requests: write

    env:
      MLFLOW_TRACKING_URI: https://dagshub.com/${{ secrets.DAGSHUB_USERNAME }}/smsml_tema.mlflow
      MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      - name: üêç Setup Conda with environment
        uses: conda-incubator/setup-miniconda@v3
        with:
          environment-file: MLProject/conda.yaml
          activate-environment: mlflow-tensorflow-env
          auto-activate-base: false

      - name: üèÉ Run MLflow project to train model
        shell: bash -l {0}
        run: |
          cd MLProject
          mlflow run . --experiment-id 0 -P epochs=5 --env-manager=local

      - name: üÜî Get MLflow run_id from file
        id: get_run_id
        shell: bash -l {0}
        run: |
          RUN_ID_FILE="MLProject/run_id.txt"
          if [ ! -f "$RUN_ID_FILE" ]; then echo "‚ùå File run_id.txt not found!"; exit 1; fi
          RUN_ID=$(cat $RUN_ID_FILE)
          if [[ -z "$RUN_ID" ]]; then echo "‚ùå Failed to read run ID from file!"; exit 1; fi
          echo "‚úÖ Run ID from file: $RUN_ID"
          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV

      - name: üì• Download Model Artifact
        shell: bash -l {0}
        run: |
          echo "Downloading model artifact from run ID: $RUN_ID"
          mlflow artifacts download --run-id $RUN_ID --artifact-path model -d ./downloaded_model
          echo "‚úÖ Model artifact downloaded. Contents:"
          ls -R ./downloaded_model

      # =================================================================
      # === PERBAIKAN DI SINI: PROSES DIPISAH MENJADI DUA LANGKAH =======
      # =================================================================
      - name: Prepare Artifacts for Commit
        run: |
          echo "Preparing production_model directory..."
          # Hapus folder artefak lama untuk memastikan kebersihan
          rm -rf production_model/
          # Buat folder baru
          mkdir -p production_model/
          # Salin artefak yang baru diunduh ke folder tersebut
          cp -r downloaded_model/model/* production_model/
          echo "Artifacts are ready to be committed."

      - name: Create Pull Request with Prepared Artifacts
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT }}
          commit-message: "ci: Update production model artifact"
          author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          branch: "update/production-model"
          base: main
          title: "[Automated] Update Production Model Artifact"
          body: |
            A new version of the model has been trained and its artifact is ready.
            - **Run ID:** `${{ env.RUN_ID }}`

            This PR updates the contents of the `production_model/` directory.
          # Menambahkan path yang akan di-commit
          add-paths: |
            production_model/

      # Langkah-langkah untuk Docker tetap berjalan seperti biasa
      - name: üì• Download Environment Artifact (for Docker)
        shell: bash -l {0}
        run: |
          mlflow artifacts download --run-id $RUN_ID --artifact-path environment -d ./environment_files

      - name: üê≥ Build Docker Image using custom Dockerfile
        run: |
          docker build -t smsml-model -f Dockerfile .

      - name: üîê Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üö¢ Push Docker Image to Docker Hub
        run: |
          docker tag smsml-model:latest ${{ secrets.DOCKERHUB_USERNAME }}/smsml-model:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/smsml-model:latest

      - name: üîì Logout from Docker Hub
        run: docker logout
