name: Workflow CI/CD Model ML
on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    name: üöÄ Build, Test, and Deploy ML Model
    runs-on: ubuntu-latest
    timeout-minutes: 25

    env:
      # Ganti dengan username DagsHub Anda di Secrets
      MLFLOW_TRACKING_URI: https://dagshub.com/${{ secrets.DAGSHUB_USERNAME }}/smsml_tema.mlflow
      MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}

    steps:
      - name: üì¶ Checkout repository
        uses: actions/checkout@v4

      - name: üêç Setup Conda with environment from file
        uses: conda-incubator/setup-miniconda@v3
        with:
          # Arahkan ke file conda.yaml di dalam folder MLProject
          environment-file: MLProject/conda.yaml
          activate-environment: mlflow-tensorflow-env
          auto-activate-base: false

      - name: üîç Verify MLflow version
        shell: bash -l {0}
        run: |
          which mlflow
          mlflow --version

      - name: üèÉ Run MLflow project to train model
        shell: bash -l {0}
        run: |
          # Masuk ke direktori project sebelum menjalankan mlflow
          cd MLProject
          # Jalankan MLProject dengan parameter epochs
          mlflow run . --experiment-id 0 -P epochs=5

      - name: üÜî Get latest MLflow run_id (Reliable Method)
        id: get_run_id
        shell: bash -l {0}
        run: |
          echo "üîç Searching for the latest run ID..."
          # Beri jeda 5 detik untuk memastikan run terindeks di server
          sleep 5

          # Ambil RUN_ID dengan mengurutkan berdasarkan waktu mulai (paling baru dulu)
          RUN_ID=$(mlflow runs list --experiment-id 0 --order-by "start_time DESC" | awk 'NR==2 {print $1}')

          if [[ -z "$RUN_ID" ]]; then
            echo "‚ùå Run ID not found! Please check DagsHub experiment."
            mlflow runs list --experiment-id 0 --order-by "start_time DESC"
            exit 1
          fi

          echo "RUN_ID=$RUN_ID" >> $GITHUB_ENV
          echo "‚úÖ Latest Run ID found: $RUN_ID"

      - name: üì• Download model artifact from MLflow
        shell: bash -l {0}
        run: |
          echo "Downloading artifact 'model' from run ID: $RUN_ID"
          mlflow artifacts download --run-id $RUN_ID --artifact-path model -d ./downloaded_model

          # Verifikasi bahwa direktori tidak kosong
          if [ ! -d "./downloaded_model" ] || [ -z "$(ls -A ./downloaded_model)" ]; then
            echo "‚ùå Artifact download failed or the directory is empty."
            exit 1
          fi
          echo "‚úÖ Artifacts downloaded successfully."
          ls -R ./downloaded_model

      - name: üê≥ Build Docker Image from Model
        run: |
          mlflow models build-docker -m ./downloaded_model -n smsml-model --enable-mlserver

      - name: üîê Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üö¢ Push Docker Image to Docker Hub
        run: |
          docker tag smsml-model:latest ${{ secrets.DOCKERHUB_USERNAME }}/smsml-model:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/smsml-model:latest

      - name: üîì Logout from Docker Hub
        run: docker logout
